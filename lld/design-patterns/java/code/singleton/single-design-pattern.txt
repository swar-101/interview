Singleton Design Pattern


	Allows to create a class for which only one object can be created.

		e.g. logger, DB

	What is the need to create single object?
	A: 
		
		Memory Efficiency: Avoids unnecessary duplication, saving memory and improving performance.
		
		Consistency: Ensures the same state is shared across the application.
		
		Global Access: Provides a single point of access for easy management.
		
		Centralized Control: Helps manage shared resources like configuration, logging, or 
		database connections.
		
		Performance: Reduces the overhead of creating multiple instances.
		
		Concurrency Control: Simplifies managing shared data in multi-threaded environments


	DB is needed at multiple places in our servers across services (e.g. db.save(), db.execute())
	If the DB connection is done separately each time it will be a waste of CPU resources.
	
	
	
	